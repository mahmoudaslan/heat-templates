heat_template_version: 2016-04-08
description: Ubuntu 16.04_64 Application server.

parameters:
  key_name:
    type: string
    description: Name of Appserver SSH Key.
  subnet:
    type: string
    description: Name of Appserver Network.
  member_pool_id:
    type: string
    description: Pool ID that the server will be attached to be member of a loadbalancer.
  stack_id:
    type: string
    description: Heat stack id
  db_host:
    type: string
  db_name:
    type: string
  db_user:
    type: string
  db_pass:
    type: string
  image_name:
    type: string
  flavor_name:
    type: string
  security_group:
    type: string

resources:
  server:
    type: OS::Nova::Server
    properties:
      name: appserver
      image: {get_param: image_name}
      flavor: {get_param: flavor_name}
      key_name: {get_param: key_name}
      metadata: {"metering.stack": {get_param: stack_id}, "metering.scaletype": "appserver"}
      user_data: |
        #!/bin/sh
        host=$(hostname)
        sudo echo "127.0.0.1 $host" >> /etc/hosts
        sudo sed -i '/nameserver/c\nameserver 10.245.0.10' /etc/resolv.conf
      user_data_format: SOFTWARE_CONFIG
      networks:
        - subnet: {get_param: subnet}
      security_groups: [{get_param: security_group}]

  lb_member:
    type: OS::Neutron::LBaaS::PoolMember
    properties:
      address: {get_attr: [server, networks, private, 0]}
      admin_state_up: True
      pool: {get_param: member_pool_id}
      protocol_port: 9000
      subnet: {get_param: subnet}

  lb_member2:
    type: OS::Neutron::LBaaS::PoolMember
    properties:
      address: {get_attr: [server, networks, private, 1]}
      admin_state_up: True
      pool: {get_param: member_pool_id}
      protocol_port: 9000
      subnet: {get_param: subnet}

  config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      inputs:
        - name: db_host
        - name: db_name
        - name: db_user
        - name: db_pass
      config:
         get_file: conf_scripts/appserver.sh

  deployment:
    type: OS::Heat::SoftwareDeployment
    properties:
      signal_transport: HEAT_SIGNAL
      config:
        get_resource: config
      server:
        get_resource: server
      input_values:
        db_host: {get_param: db_host}
        db_name: {get_param: db_name}
        db_user: {get_param: db_user}
        db_pass: {get_param: db_pass}
      actions:
        - CREATE